
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <ncurses/ncurses.h>
#include <unistd.h>
#define PI 3.14159
#define NUMCOLS 100
#define NUMROWS 72
#define AVATAR 'A'
#define WALL '*'
#define EMPTY_SPACE ' '

char MAZE[NUMROWS][NUMCOLS];

void generate_maze(int difficulty);

void draw_maze(void);

void draw_character(int x, int y, char use);

float calc_roll(float x_mag);

int main(int argc, char* argv[])
{
	if (argc <2) { printf("You forgot the difficulty\n"); return 1;}
	int difficulty = atoi(argv[1]); 
   
	initscr();
	refresh();

	double x, y, z;
	int t;
	int i = 0;
	int lose = 0;
	int X = 49, Y = 0;
	
	generate_maze(difficulty);
	draw_maze();
	draw_character(49, 0, AVATAR);

	do
	{
	scanf("%d, %lf, %lf, %lf", &t, &x, &y, &z);

		if ((t/500) == i) { 	// avatar is placed at top and falls incrementally
			i++;
			if (MAZE[Y+1][X] != WALL) {   //the character begins to move, character begins to fall
			Y++; //update Y
			draw_character(X, Y, AVATAR);	//the next position is replaces with your AVATAR in this case A
			draw_character(X, Y-1, EMPTY_SPACE); //erases the previous avatar by overwriting it with a space
		}
	}
	if (MAZE[Y+1][X] == WALL && MAZE[Y][X-1] == WALL && MAZE[Y][X+1] == WALL) {	//can I fall? if you cant the game ends and says you lose.
		lose = 1;
		break; 
	}
	
		if (calc_roll(x) > 0.3 && X != 0 && MAZE[Y+1][X-1] != WALL) {	//moves the character left
			X--; //update X
			draw_character(X, Y, AVATAR);
			draw_character(X+1, Y, EMPTY_SPACE);
	}
	else if (calc_roll(x) < -0.3 && X != 99 && MAZE[Y][X+1] != WALL) {	//moves the character right
		X++; //Update X
		draw_character(X, Y, AVATAR);
		draw_character(X-1, Y, EMPTY_SPACE);
	}

	fflush(stdout);
	} while(Y != 72); // Did I win?, says if you win or not

	endwin();
	if (lose == 0) {
		printf("YOU WIN!\n"); //Announces that you have won the game
	}
	else {
		printf("You Lose!\n"); //anounces that you have lost the game
	}
	return 0;
}


void draw_character(int x, int y, char use)
{
	mvaddch(y,x,use);    
	refresh();
}

void generate_maze(int difficulty){
	int i,j;
	int random;
	for (i = 0; i < NUMROWS; i++) {
		for (j = 0; j < NUMCOLS; j++) {
			random = rand() % 100;
			if (random < difficulty) {
				MAZE[i][j] = WALL;
			}
			else {
					MAZE[i][j] = EMPTY_SPACE;
			}
		}
	}
}
	
void draw_maze(void){
int i;
int j;

	for (i = 0; i < NUMROWS; i++) {
		for (j = 0; j < NUMCOLS; j++) {
			draw_character(j, i, MAZE[i][j]);
		}
	}
}

float calc_roll(float x_mag) {
	if (x_mag < -1) {
	x_mag = -1;
	}
	else if (x_mag > 1) {
		x_mag = 1;
	}
	return (asin(x_mag));
}						

